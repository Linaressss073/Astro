---
import Vuelo from "../components/vuelos.astro";
const { searchParams } = Astro.url;

const vuelo = {
  origen: searchParams.get("origen"),
  destino: searchParams.get("destino"),
  fechaSalida: searchParams.get("fechaSalida"),
  fechaRegreso: searchParams.get("fechaRegreso"),
  horaSalida: searchParams.get("horaSalida"),
  horaRegreso: searchParams.get("horaRegreso"),
  categoria: searchParams.get("categoria"),
  costo: searchParams.get("costo"),
};
---

<head>
  <meta charset="UTF-8" />
  <title>P√°gina de Pago - Reserva de Vuelo</title>
  <link rel="stylesheet" href="/styles.css" />
</head>

<div class="pago-container">
  <h2>üí≥ Confirmar Pago</h2>

  <h3>üßæ Informaci√≥n de Pago</h3>
  <form id="pagoForm" action="/confirmacion" method="POST">
    <div class="form-group">
      <label for="nombre">Nombre:</label>
      <input id="nombre" name="nombre" type="text" placeholder="Tu nombre" required />
    </div>

    <div class="form-group">
      <label for="apellido">Apellido:</label>
      <input id="apellido" name="apellido" type="text" placeholder="Tu apellido" required />
    </div>

    <div class="form-group">
      <label for="tarjeta">N√∫mero de tarjeta:</label>
      <input id="tarjeta" name="tarjeta" type="text" placeholder="1234 5678 9012 3456" maxlength="19" required />
    </div>

    <div class="form-group">
      <label for="fechaExp">Fecha de expiraci√≥n (MM/YY):</label>
      <input id="fechaExp" name="fechaExp" type="text" placeholder="MM/YY" required />
    </div>

    <div class="form-group">
      <label for="cvv">CVV:</label>
      <input id="cvv" name="cvv" type="text" placeholder="123" maxlength="3" required />
    </div>

    <!-- Datos ocultos del vuelo -->
    <input type="hidden" name="origen" value={vuelo.origen} />
    <input type="hidden" name="destino" value={vuelo.destino} />
    <input type="hidden" name="fechaSalida" value={vuelo.fechaSalida} />
    <input type="hidden" name="fechaRegreso" value={vuelo.fechaRegreso || ""} />
    <input type="hidden" name="horaSalida" value={vuelo.horaSalida} />
    <input type="hidden" name="horaRegreso" value={vuelo.horaRegreso || ""} />
    <input type="hidden" name="categoria" value={vuelo.categoria} />
    <input type="hidden" name="costo" value={vuelo.costo} />

    <button type="submit" class="btn-pagar">Pagar Ahora üí≥</button>
  </form>

  <div id="errorMensaje"></div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("pagoForm");
    const tarjetaInput = document.getElementById("tarjeta");
    const fechaExpInput = document.getElementById("fechaExp");
    const errorMensaje = document.getElementById("errorMensaje");

    // Formato de tarjeta de cr√©dito (XXXX XXXX XXXX XXXX)
    tarjetaInput.addEventListener("input", (e) => {
      let value = e.target.value.replace(/\D/g, "").slice(0, 16);
      e.target.value = value.replace(/(\d{4})/g, "$1 ").trim();
    });

    // Validaci√≥n de fecha de expiraci√≥n MM/YY
    fechaExpInput.addEventListener("input", (e) => {
      let value = e.target.value.replace(/\D/g, "").slice(0, 4);
      if (value.length >= 2) value = value.replace(/(\d{2})/, "$1/");
      e.target.value = value;
    });

    // Algoritmo de Luhn para validar tarjeta
    function validarTarjeta(numero) {
      let arr = numero.replace(/\s/g, "").split("").reverse();
      return arr.reduce((acc, num, i) => {
        let n = parseInt(num);
        if (i % 2 !== 0) n *= 2;
        if (n > 9) n -= 9;
        return acc + n;
      }, 0) % 10 === 0;
    }

    // Validaci√≥n al enviar
    form.addEventListener("submit", (e) => {
      const tarjeta = tarjetaInput.value.replace(/\s/g, "");
      const fechaExp = fechaExpInput.value;
      const [mes, a√±o] = fechaExp.split("/").map(Number);
      const fechaActual = new Date();
      const a√±oActual = fechaActual.getFullYear() % 100;
      const mesActual = fechaActual.getMonth() + 1;

      if (!validarTarjeta(tarjeta)) {
        errorMensaje.textContent = "‚ùå N√∫mero de tarjeta inv√°lido.";
        e.preventDefault();
      } else if (!mes || !a√±o || mes < 1 || mes > 12 || a√±o < a√±oActual || (a√±o === a√±oActual && mes < mesActual)) {
        errorMensaje.textContent = "‚ùå Fecha de expiraci√≥n inv√°lida.";
        e.preventDefault();
      }
    });
  });
</script>
<style>
  body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #7D55C7, #5A32A3);
    color: #333;
    margin: 0;
    padding: 0;
  }
  
  .pago-container {
    max-width: 600px;
    margin: 50px auto;
    padding: 40px;
    background: #ffffff;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.8s ease-in-out;
  }
  
  h2, h3 {
    text-align: center;
    color: #5A32A3;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  label {
    display: block;
    font-weight: bold;
    margin-bottom: 8px;
    color: #5A32A3;
  }
  
  input {
    width: 100%;
    padding: 12px;
    border-radius: 12px;
    border: 2px solid #5A32A3;
    transition: all 0.3s;
    box-sizing: border-box;
  }
  
  input:focus {
    outline: none;
    border-color: #7D55C7;
    box-shadow: 0 0 10px #7D55C7;
  }
  
  .btn-pagar {
    background: linear-gradient(135deg, #5A32A3, #7D55C7);
    color: white;
    padding: 15px;
    width: 100%;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    font-size: 18px;
    transition: transform 0.2s;
  }
  
  .btn-pagar:hover {
    transform: scale(1.05);
  }
  
  #errorMensaje {
    color: red;
    margin-top: 20px;
    text-align: center;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  </style>